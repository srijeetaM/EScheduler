!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CL_USE_DEPRECATED_OPENCL_1_2_APIS	core.h	39;"	d
CL_USE_DEPRECATED_OPENCL_1_2_APIS	functionalities.h	42;"	d
CNN	benchmark_synthesis/cnn_new/cnn.py	/^class CNN(Kernel):$/;"	c
C_BIG	core.h	/^int C_BIG;$/;"	v
C_BIG	functionalities.h	/^int C_BIG;$/;"	v
DAGInfo	core.h	/^}DAGInfo;$/;"	t	typeref:struct:_daginfo
DAGInfo	functionalities.h	/^}DAGInfo;$/;"	t	typeref:struct:_daginfo
DAGTime	core.h	/^}DAGTime;$/;"	t	typeref:struct:_DAGtime
DAGTime	functionalities.h	/^}DAGTime;$/;"	t	typeref:struct:_DAGtime
DNN	benchmark_synthesis/cnn_new/fusion_template.py	/^class DNN(object):$/;"	c
DNN	benchmark_synthesis/dnn_new/dnn.py	/^class DNN(Kernel):$/;"	c
DNN	benchmark_synthesis/dnn_new/fusion_template.py	/^class DNN(object):$/;"	c
DeviceConfig	core.h	/^} DeviceConfig;$/;"	t	typeref:struct:_devConfig
DeviceConfig	functionalities.h	/^} DeviceConfig;$/;"	t	typeref:struct:_devConfig
DeviceSpecification	core.h	/^} DeviceSpecification;$/;"	t	typeref:struct:_deviceSpecification
DeviceSpecification	functionalities.h	/^} DeviceSpecification;$/;"	t	typeref:struct:_deviceSpecification
Event	core.h	/^} Event;$/;"	t	typeref:struct:_event
FACTOR	core.h	/^int FACTOR;$/;"	v
FACTOR	functionalities.h	/^int FACTOR;$/;"	v
FusedKernel	benchmark_synthesis/cnn_new/fusion_template.py	/^class FusedKernel(object):$/;"	c
FusedKernel	benchmark_synthesis/dnn_new/fusion_template.py	/^class FusedKernel(object):$/;"	c
G_BIG	core.h	/^int G_BIG;$/;"	v
G_BIG	functionalities.h	/^int G_BIG;$/;"	v
G_LITTLE	core.h	/^int G_LITTLE;$/;"	v
G_LITTLE	functionalities.h	/^int G_LITTLE;$/;"	v
Gemm	benchmark_synthesis/cnn_new/fusion_template.py	/^class Gemm(Kernel):$/;"	c
Gemm	benchmark_synthesis/dnn_new/fusion_template.py	/^class Gemm(Kernel):$/;"	c
Interval	core.h	/^}Interval;$/;"	t	typeref:struct:_interval
Interval	functionalities.h	/^}Interval;$/;"	t	typeref:struct:_interval
JobInfo	core.h	/^}JobInfo;$/;"	t	typeref:struct:_jobinfo
JobInfo	functionalities.h	/^}JobInfo;$/;"	t	typeref:struct:_jobinfo
Kernel	benchmark_synthesis/cnn_new/fusion_template.py	/^class Kernel(object):$/;"	c
Kernel	benchmark_synthesis/dnn_new/fusion_template.py	/^class Kernel(object):$/;"	c
KernelEvents	core.h	/^} KernelEvents;$/;"	t	typeref:struct:_kernel_events
KernelEvents	functionalities.h	/^} KernelEvents;$/;"	t	typeref:struct:_kernel_events
KernelExecutionInfo	core.h	/^} KernelExecutionInfo;$/;"	t	typeref:struct:_kernelexecutioninfo
KernelExecutionInfo	functionalities.h	/^} KernelExecutionInfo;$/;"	t	typeref:struct:_kernelexecutioninfo
KernelInfo	core.h	/^} KernelInfo;$/;"	t	typeref:struct:_kernelinfo
KernelInfo	functionalities.h	/^} KernelInfo;$/;"	t	typeref:struct:_kernelinfo
KernelLaunchInfo	core.h	/^} KernelLaunchInfo;$/;"	t	typeref:struct:_kernellaunchinfo
KernelLaunchInfo	functionalities.h	/^} KernelLaunchInfo;$/;"	t	typeref:struct:_kernellaunchinfo
KernelName	core.h	/^    std::string KernelName;$/;"	m	struct:_kernelinfo
KernelName	functionalities.h	/^    std::string KernelName;$/;"	m	struct:_kernelinfo
LOG_LEVEL	core.h	/^int LOG_LEVEL;$/;"	v
LOG_LEVEL	functionalities.h	/^int LOG_LEVEL;$/;"	v
LOG_PROFILE	core.h	/^int LOG_PROFILE;$/;"	v
LOG_PROFILE	functionalities.h	/^int LOG_PROFILE;$/;"	v
LOG_SCHEDULER	core.h	/^int LOG_SCHEDULER;$/;"	v
LOG_SCHEDULER	functionalities.h	/^int LOG_SCHEDULER;$/;"	v
MODE	core.h	/^int MODE;$/;"	v
MODE	functionalities.h	/^int MODE;$/;"	v
NumCoresPerDevice	core.h	/^int NumCoresPerDevice;$/;"	v
NumCoresPerDevice	functionalities.h	/^int NumCoresPerDevice;$/;"	v
NumNodes_0	core.h	/^int NumNodes_0;$/;"	v
NumNodes_0	functionalities.h	/^int NumNodes_0;$/;"	v
NumNodes_1	core.h	/^int NumNodes_1;$/;"	v
NumNodes_1	functionalities.h	/^int NumNodes_1;$/;"	v
NumOfJobs	core.h	/^int NumOfJobs;$/;"	v
NumOfJobs	functionalities.h	/^int NumOfJobs;$/;"	v
NumOfSensors	core.h	/^int NumOfSensors;$/;"	v
NumOfSensors	functionalities.h	/^int NumOfSensors;$/;"	v
NumOfTempBand	core.h	/^int NumOfTempBand;$/;"	v
NumOfTempBand	functionalities.h	/^int NumOfTempBand;$/;"	v
NumofCPUs	core.h	/^int NumofCPUs;$/;"	v
NumofCPUs	functionalities.h	/^int NumofCPUs;$/;"	v
PERSISTENCE_DEBUG	core.h	37;"	d
PLATFORM_CPU	core.h	/^int PLATFORM_CPU;$/;"	v
PLATFORM_CPU	functionalities.h	/^int PLATFORM_CPU;$/;"	v
PLATFORM_GPU	core.h	/^int PLATFORM_GPU;$/;"	v
PLATFORM_GPU	functionalities.h	/^int PLATFORM_GPU;$/;"	v
POLE	core.h	/^int POLE;$/;"	v
POLE	functionalities.h	/^int POLE;$/;"	v
PROFILE_ITERATIONS	core.h	47;"	d
SAFE	core.h	/^int SAFE;$/;"	v
SAFE	functionalities.h	/^int SAFE;$/;"	v
START_TIME	core.h	/^unsigned long long int START_TIME;$/;"	v
START_TIME	functionalities.h	/^unsigned long long int START_TIME;$/;"	v
STR_LENGTH	core.h	/^int STR_LENGTH; $/;"	v
STR_LENGTH	functionalities.h	/^int STR_LENGTH; $/;"	v
SchedulerFinish	core.h	/^int SchedulerFinish=0;$/;"	v
SchedulerFinish	functionalities.h	/^int SchedulerFinish=0;$/;"	v
TaskInfo	core.h	/^} TaskInfo;$/;"	t	typeref:struct:_taskinfo
TaskInfo	functionalities.h	/^} TaskInfo;$/;"	t	typeref:struct:_taskinfo
TempInterval	core.h	/^int TempInterval;$/;"	v
TempInterval	functionalities.h	/^int TempInterval;$/;"	v
Temperature	core.h	/^} Temperature;$/;"	t	typeref:struct:_temperature
Temperature	functionalities.h	/^} Temperature;$/;"	t	typeref:struct:_temperature
_DAGtime	core.h	/^typedef struct _DAGtime$/;"	s
_DAGtime	functionalities.h	/^typedef struct _DAGtime$/;"	s
__FUNCTIONALITIES_H	functionalities.h	3;"	d
__STRING_H	string.h	2;"	d
__init__	benchmark_synthesis/cnn_new/cnn.py	/^    def __init__($/;"	m	class:CNN
__init__	benchmark_synthesis/cnn_new/fusion_template.py	/^    def __init__($/;"	m	class:Gemm
__init__	benchmark_synthesis/cnn_new/fusion_template.py	/^    def __init__($/;"	m	class:Kernel
__init__	benchmark_synthesis/cnn_new/fusion_template.py	/^    def __init__(self, dag_id, input_size, cfg):$/;"	m	class:DNN
__init__	benchmark_synthesis/cnn_new/fusion_template.py	/^    def __init__(self, kernel):$/;"	m	class:FusedKernel
__init__	benchmark_synthesis/dnn_new/dnn.py	/^    def __init__($/;"	m	class:DNN
__init__	benchmark_synthesis/dnn_new/fusion_template.py	/^    def __init__($/;"	m	class:Gemm
__init__	benchmark_synthesis/dnn_new/fusion_template.py	/^    def __init__($/;"	m	class:Kernel
__init__	benchmark_synthesis/dnn_new/fusion_template.py	/^    def __init__(self, dag_id, input_size, cfg):$/;"	m	class:DNN
__init__	benchmark_synthesis/dnn_new/fusion_template.py	/^    def __init__(self, kernel):$/;"	m	class:FusedKernel
_daginfo	core.h	/^typedef struct _daginfo$/;"	s
_daginfo	functionalities.h	/^typedef struct _daginfo$/;"	s
_devConfig	core.h	/^typedef struct _devConfig{$/;"	s
_devConfig	functionalities.h	/^typedef struct _devConfig{$/;"	s
_deviceSpecification	core.h	/^typedef struct _deviceSpecification{$/;"	s
_deviceSpecification	functionalities.h	/^typedef struct _deviceSpecification{$/;"	s
_event	core.h	/^    _event(cl_event e,std::string t)$/;"	f	struct:_event
_event	core.h	/^typedef struct _event$/;"	s
_interval	core.h	/^typedef struct _interval{$/;"	s
_interval	functionalities.h	/^typedef struct _interval{$/;"	s
_jobinfo	core.h	/^typedef struct _jobinfo$/;"	s
_jobinfo	functionalities.h	/^typedef struct _jobinfo$/;"	s
_kernel_events	core.h	/^typedef struct _kernel_events$/;"	s
_kernel_events	functionalities.h	/^typedef struct _kernel_events$/;"	s
_kernelexecutioninfo	core.h	/^typedef struct _kernelexecutioninfo{  $/;"	s
_kernelexecutioninfo	functionalities.h	/^typedef struct _kernelexecutioninfo{  $/;"	s
_kernelinfo	core.h	/^typedef struct _kernelinfo$/;"	s
_kernelinfo	functionalities.h	/^typedef struct _kernelinfo$/;"	s
_kernellaunchinfo	core.h	/^typedef struct _kernellaunchinfo{$/;"	s
_kernellaunchinfo	functionalities.h	/^typedef struct _kernellaunchinfo{$/;"	s
_taskinfo	core.h	/^typedef struct _taskinfo$/;"	s
_taskinfo	functionalities.h	/^typedef struct _taskinfo$/;"	s
_temperature	core.h	/^typedef struct _temperature{$/;"	s
_temperature	functionalities.h	/^typedef struct _temperature{$/;"	s
arrival	core.h	/^    unsigned long long int arrival;$/;"	m	struct:_taskinfo
arrival	functionalities.h	/^    unsigned long long int arrival;$/;"	m	struct:_taskinfo
arrivalTime	core.h	/^    unsigned long long int arrivalTime;$/;"	m	struct:_DAGtime
arrivalTime	functionalities.h	/^    unsigned long long int arrivalTime;$/;"	m	struct:_DAGtime
arrivaltime	automation.py	/^arrivaltime = '0.0'$/;"	v
arrivaltime	generate_profile_dispatch_history.py	/^    arrivaltime = 0.0$/;"	v
barrier_read	core.h	/^    cl_event barrier_read;$/;"	m	struct:_kernel_events
barrier_read	functionalities.h	/^    cl_event barrier_read;$/;"	m	struct:_kernel_events
barrier_write	core.h	/^    cl_event barrier_write;$/;"	m	struct:_kernel_events
barrier_write	functionalities.h	/^    cl_event barrier_write;$/;"	m	struct:_kernel_events
basespeed	core.h	/^    std::vector <float> basespeed;$/;"	m	struct:_taskinfo
basespeed	functionalities.h	/^    std::vector <float> basespeed;$/;"	m	struct:_taskinfo
benchmark	generate_profile_dispatch_history.py	/^                benchmark = "cnn"$/;"	v
benchmark	generate_profile_dispatch_history.py	/^                benchmark = "dnn"$/;"	v
benchmark	run_profiling.py	/^        benchmark = "cnn"$/;"	v
benchmark	run_profiling.py	/^        benchmark = "dnn"$/;"	v
benchmark	run_profiling.py	/^    benchmark = ""$/;"	v
buf_index	benchmark_synthesis/cnn_new/test.py	/^            buf_index = 0$/;"	v
buf_index	benchmark_synthesis/dnn_new/test.py	/^            buf_index = 0$/;"	v
bufferInputID	core.h	/^    std::vector <unsigned int> bufferInputID;$/;"	m	struct:_kernelinfo
bufferInputID	functionalities.h	/^    std::vector <unsigned int> bufferInputID;$/;"	m	struct:_kernelinfo
bufferOutputID	core.h	/^    std::vector <unsigned int> bufferOutputID;  $/;"	m	struct:_kernelinfo
bufferOutputID	functionalities.h	/^    std::vector <unsigned int> bufferOutputID;  $/;"	m	struct:_kernelinfo
cfg	benchmark_synthesis/cnn_new/test.py	/^            cfg=[]$/;"	v
check	core.h	/^void check(cl_int status, const char* str) {$/;"	f
chunkSizeTiming	core.h	/^    unsigned long long int chunkSizeTiming;$/;"	m	struct:_kernelinfo
chunkSizeTiming	functionalities.h	/^    unsigned long long int chunkSizeTiming;$/;"	m	struct:_kernelinfo
cnn	benchmark_synthesis/cnn_new/test.py	/^        cnn = []$/;"	v
code	benchmark_synthesis/cnn_new/cnn.py	/^		code = ""$/;"	v	class:CNN
command	run_profiling.py	/^        command = "taskset -c 3-7 .\/run_kernel trace\/profile_"+ benchmark + "_history_"+str(key)+".stats" + " .\/tinfo\/DAG_"+sys.argv[1]+"\/"+trace_tinfo_map[key]+" " + str(key) +" " +str(micro_kernel_device) + " " + ".\/dag_history\/dag_history_0.stats"$/;"	v
command	scripts/profile_overheads.py	/^		command = run_command+filename+"_"+str(i)+".stats"$/;"	v
compute	benchmark_synthesis/cnn_new/fusion_template.py	/^    def compute(self):$/;"	m	class:Kernel
compute	benchmark_synthesis/dnn_new/fusion_template.py	/^    def compute(self):$/;"	m	class:Kernel
configuration	benchmark_synthesis/cnn_new/test.py	/^    configuration = []$/;"	v
configured	core.h	/^    std::map<int,int> configured;$/;"	m	struct:_kernelinfo
control_mode	core.h	/^    int control_mode;$/;"	m	struct:_kernellaunchinfo
control_mode	functionalities.h	/^    int control_mode;$/;"	m	struct:_kernellaunchinfo
controlerTemp	core.h	/^int controlerTemp;$/;"	v
controlerTemp	functionalities.h	/^int controlerTemp;$/;"	v
cpuB_0	core.h	/^    int cpuB_0;$/;"	m	struct:_temperature
cpuB_0	functionalities.h	/^    int cpuB_0;$/;"	m	struct:_temperature
cpuB_1	core.h	/^    int cpuB_1;$/;"	m	struct:_temperature
cpuB_1	functionalities.h	/^    int cpuB_1;$/;"	m	struct:_temperature
cpuB_2	core.h	/^    int cpuB_2;$/;"	m	struct:_temperature
cpuB_2	functionalities.h	/^    int cpuB_2;$/;"	m	struct:_temperature
cpuB_3	core.h	/^    int cpuB_3;$/;"	m	struct:_temperature
cpuB_3	functionalities.h	/^    int cpuB_3;$/;"	m	struct:_temperature
curr_params	generate_profile_dispatch_history.py	/^            curr_params = [job_id,start_node,fused_kernel,isDependent,platform_id,device_id,deadline,arrivaltime,safetytime,isTerminal,global_dagid,instanceid,frequency]$/;"	v
cv	core.h	/^std::condition_variable cv;$/;"	v
cv	scripts/observe_variations.py	/^			cv = std\/mean$/;"	v
dag	benchmark_synthesis/cnn_new/test.py	/^            dag = 1$/;"	v
dag	benchmark_synthesis/dnn_new/test.py	/^            dag = 0$/;"	v
dagInfo	core.h	/^    DAGInfo * dagInfo;$/;"	m	struct:_taskinfo
dagInfo	functionalities.h	/^    DAGInfo * dagInfo;$/;"	m	struct:_taskinfo
dag_id	scripts/observe_variations.py	/^			dag_id = int(values[0])$/;"	v
daghistory_file_contents	automation.py	/^daghistory_file_contents = open("dag_history\/dag_history_0.stats",'w')$/;"	v
data	benchmark_synthesis/cnn_combined/add_persistent_buffers.py	/^            data = file_content.readlines()$/;"	v
data	benchmark_synthesis/cnn_combined/add_persistent_buffers.py	/^        data = []$/;"	v
data	core.h	/^    std::vector<void*>  data;$/;"	m	struct:_taskinfo
data	functionalities.h	/^    std::vector<void*>  data;$/;"	m	struct:_taskinfo
data_outflow	core.h	/^    std::vector < std::tuple <unsigned int, unsigned int, unsigned int> >data_outflow;$/;"	m	struct:_kernelinfo
data_outflow	functionalities.h	/^    std::vector < std::tuple <unsigned int, unsigned int, unsigned int> >data_outflow;$/;"	m	struct:_kernelinfo
datatype	benchmark_synthesis/cnn_new/test.py	/^            datatype = "float"$/;"	v
datatype	benchmark_synthesis/dnn_new/test.py	/^            datatype = "float"$/;"	v
deadline	automation.py	/^deadline = '999.0'$/;"	v
deadline	core.h	/^    float deadline;$/;"	m	struct:_DAGtime
deadline	core.h	/^    unsigned long long int deadline;    $/;"	m	struct:_taskinfo
deadline	functionalities.h	/^    float deadline;$/;"	m	struct:_DAGtime
deadline	functionalities.h	/^    unsigned long long int deadline;    $/;"	m	struct:_taskinfo
deadline	generate_profile_dispatch_history.py	/^    deadline = 9999.999$/;"	v
deadlineViolated	core.h	/^    int deadlineViolated;$/;"	m	struct:_DAGtime
deadlineViolated	functionalities.h	/^    int deadlineViolated;$/;"	m	struct:_DAGtime
define_variables	benchmark_synthesis/dnn_new/dnn.py	/^    def define_variables(self):$/;"	m	class:DNN
dependency	core.h	/^    std::vector <int> dependency;$/;"	m	struct:_taskinfo
dependency	core.h	/^    std::vector <std::vector <int>> dependency;$/;"	m	struct:_jobinfo
dependency	functionalities.h	/^    std::vector <int> dependency;$/;"	m	struct:_taskinfo
dependency	functionalities.h	/^    std::vector <std::vector <int>> dependency;$/;"	m	struct:_jobinfo
depth	benchmark_synthesis/cnn_new/test.py	/^            depth = i$/;"	v
depth	benchmark_synthesis/dnn_new/test.py	/^            depth = i$/;"	v
devEndTime	core.h	/^    unsigned long long int  devEndTime;$/;"	m	struct:_kernelexecutioninfo
devEndTime	functionalities.h	/^    unsigned long long int  devEndTime;$/;"	m	struct:_kernelexecutioninfo
devStartTime	core.h	/^    unsigned long long int  devStartTime;$/;"	m	struct:_kernelexecutioninfo
devStartTime	functionalities.h	/^    unsigned long long int  devStartTime;$/;"	m	struct:_kernelexecutioninfo
devTotalTime	core.h	/^    unsigned long long int  devTotalTime; $/;"	m	struct:_kernelexecutioninfo
devTotalTime	functionalities.h	/^    unsigned long long int  devTotalTime; $/;"	m	struct:_kernelexecutioninfo
device_config	core.h	/^    std::vector<DeviceConfig*> device_config;    $/;"	m	struct:_deviceSpecification
device_config	functionalities.h	/^    std::vector<DeviceConfig*> device_config;    $/;"	m	struct:_deviceSpecification
device_id	automation.py	/^device_id = sys.argv[5]$/;"	v
device_id	generate_profile_dispatch_history.py	/^    device_id = 0 # 0 is cpu 0,1 is GPU$/;"	v
device_index	core.h	/^    int device_index;$/;"	m	struct:_kernellaunchinfo
device_index	functionalities.h	/^    int device_index;$/;"	m	struct:_kernellaunchinfo
device_pos	core.h	/^    int device_pos;$/;"	m	struct:_kernellaunchinfo
device_pos	functionalities.h	/^    int device_pos;$/;"	m	struct:_kernellaunchinfo
devlock	core.h	/^int devlock=0;$/;"	v
devlock	functionalities.h	/^int devlock=0;$/;"	v
dimension	benchmark_synthesis/cnn_new/test.py	/^            dimension = 1$/;"	v
dimension	benchmark_synthesis/dnn_new/test.py	/^            dimension = 1$/;"	v
dispatchTime	core.h	/^    unsigned long long int  dispatchTime; \/\/ time difference between dispatch start and dispatch end$/;"	m	struct:_kernelexecutioninfo
dispatchTime	functionalities.h	/^    unsigned long long int  dispatchTime; \/\/ time difference between dispatch start and dispatch end$/;"	m	struct:_kernelexecutioninfo
dnn	benchmark_synthesis/dnn_new/test.py	/^        dnn = []$/;"	v
dump	core.h	/^    void dump()$/;"	f	struct:_event
dump	core.h	/^    void dump()$/;"	f	struct:_kernel_events
dump_file	generate_profile_dispatch_history.py	/^            dump_file = "trace\/profile_"+benchmark+"_history_"+str(trace_id)+".stats"$/;"	v
dump_time	core.h	/^    std::string dump_time()$/;"	f	struct:_event
dump_times	core.h	/^    std::string dump_times()$/;"	f	struct:_kernel_events
dump_tinfo	benchmark_synthesis/cnn_new/fusion_template.py	/^    def dump_tinfo(self, name, source, dimension, filename,num_args=-1):$/;"	m	class:Kernel
dump_tinfo	benchmark_synthesis/dnn_new/fusion_template.py	/^    def dump_tinfo(self, name, source, dimension, filename,num_args=-1):$/;"	m	class:Kernel
end	core.h	/^    unsigned long long int end;$/;"	m	struct:_interval
end	functionalities.h	/^    unsigned long long int end;$/;"	m	struct:_interval
ev	core.h	/^    cl_event ev;$/;"	m	struct:_event
exTime	core.h	/^    float exTime;$/;"	m	struct:_taskinfo
exTime	functionalities.h	/^    float exTime;$/;"	m	struct:_taskinfo
exec	core.h	/^    cl_event exec;$/;"	m	struct:_kernel_events
exec	functionalities.h	/^    cl_event exec;$/;"	m	struct:_kernel_events
expected_speed	core.h	/^    float expected_speed;$/;"	m	struct:_kernellaunchinfo
expected_speed	functionalities.h	/^    float expected_speed;$/;"	m	struct:_kernellaunchinfo
f	generate_profile_dispatch_history.py	/^            f=open(dump_file,'w')$/;"	v
f	scripts/observe_variations.py	/^		f = open(filename+"_"+str(i)+".stats",'r')$/;"	v
fields	generate_profile_dispatch_history.py	/^    fields = []$/;"	v
file	benchmark_synthesis/cnn_new/test.py	/^            file = open(src_file, "w")$/;"	v
file	benchmark_synthesis/dnn_new/test.py	/^            file = open(src_file, "w")$/;"	v
file_exists	core.h	/^inline bool file_exists(const std::string& name) $/;"	f
file_path	generate_profile_dispatch_history.py	/^        file_path = os.path.join(path, file)$/;"	v
filename	scripts/observe_variations.py	/^	filename = "profile_statistics\/"+input_arg+"\/"+input_arg$/;"	v
filename	scripts/profile_overheads.py	/^	filename = sys.argv[1]$/;"	v
files	automation.py	/^files = os.listdir(path)$/;"	v
files	benchmark_synthesis/cnn_combined/add_persistent_buffers.py	/^files = []$/;"	v
files_p	automation.py	/^    files_p = os.listdir(path)$/;"	v
finishTime	core.h	/^    unsigned long long int finishTime;$/;"	m	struct:_DAGtime
finishTime	functionalities.h	/^    unsigned long long int finishTime;$/;"	m	struct:_DAGtime
finished	core.h	/^    int finished = 0;$/;"	m	struct:_kernellaunchinfo
flag	generate_profile_dispatch_history.py	/^    flag = 0 # 1 cpu or gpu 0$/;"	v
freq_list	generate_profile_dispatch_history.py	/^    freq_list = {}$/;"	v
frequency	automation.py	/^frequency = '-1'$/;"	v
frequency	core.h	/^    unsigned int frequency;$/;"	m	struct:_devConfig
frequency	core.h	/^    unsigned int frequency;$/;"	m	struct:_kernellaunchinfo
frequency	functionalities.h	/^    unsigned int frequency;$/;"	m	struct:_devConfig
frequency	functionalities.h	/^    unsigned int frequency;$/;"	m	struct:_kernellaunchinfo
frequency	generate_profile_dispatch_history.py	/^    frequency = -1$/;"	v
frequency_change_time	core.h	/^    unsigned long long int frequency_change_time;$/;"	m	struct:_kernelexecutioninfo
frequency_change_time	functionalities.h	/^    unsigned long long int frequency_change_time;$/;"	m	struct:_kernelexecutioninfo
function_signature	benchmark_synthesis/cnn_new/cnn.py	/^    def function_signature(self):$/;"	m	class:CNN
function_signature	benchmark_synthesis/cnn_new/fusion_template.py	/^    def function_signature(self):$/;"	m	class:Gemm
function_signature	benchmark_synthesis/dnn_new/dnn.py	/^    def function_signature(self):$/;"	m	class:DNN
function_signature	benchmark_synthesis/dnn_new/fusion_template.py	/^    def function_signature(self):$/;"	m	class:Gemm
fused_node_id	automation.py	/^fused_node_id = sys.argv[3]$/;"	v
fused_noid_id	generate_profile_dispatch_history.py	/^    fused_noid_id = 1;# we can get it in the file name$/;"	v
gbool	core.h	/^std::vector<bool> gbool;$/;"	v
gbool	functionalities.h	/^std::vector<bool> gbool;$/;"	v
gchar	core.h	/^std::vector<char> gchar;$/;"	v
gchar	functionalities.h	/^std::vector<char> gchar;$/;"	v
gdouble	core.h	/^std::vector<double> gdouble;$/;"	v
gdouble	functionalities.h	/^std::vector<double> gdouble;$/;"	v
generatePlot	core.h	/^int generatePlot;$/;"	v
generatePlot	functionalities.h	/^int generatePlot;$/;"	v
generate_fused_source_code	benchmark_synthesis/cnn_new/cnn.py	/^    def generate_fused_source_code(self):$/;"	m	class:CNN
generate_fused_source_code	benchmark_synthesis/dnn_new/dnn.py	/^    def generate_fused_source_code(self):$/;"	m	class:DNN
generate_source_code	benchmark_synthesis/cnn_new/cnn.py	/^    def generate_source_code(self):$/;"	m	class:CNN
generate_source_code	benchmark_synthesis/cnn_new/fusion_template.py	/^    def generate_source_code(self):$/;"	m	class:Gemm
generate_source_code	benchmark_synthesis/dnn_new/dnn.py	/^    def generate_source_code(self):$/;"	m	class:DNN
generate_source_code	benchmark_synthesis/dnn_new/fusion_template.py	/^    def generate_source_code(self):$/;"	m	class:Gemm
getErrorString	core.h	/^const char *getErrorString(cl_int error)$/;"	f
get_buffer_sizes	benchmark_synthesis/cnn_new/cnn.py	/^    def get_buffer_sizes(self):$/;"	m	class:CNN
get_dag_stats	benchmark_synthesis/cnn_new/fusion_template.py	/^    def get_dag_stats(self, input_size, cfg):$/;"	m	class:DNN
get_dag_stats	benchmark_synthesis/dnn_new/fusion_template.py	/^    def get_dag_stats(self, input_size, cfg):$/;"	m	class:DNN
get_first_kernel	benchmark_synthesis/cnn_new/fusion_template.py	/^    def get_first_kernel(self):$/;"	m	class:FusedKernel
get_first_kernel	benchmark_synthesis/dnn_new/fusion_template.py	/^    def get_first_kernel(self):$/;"	m	class:FusedKernel
get_image_end_time	core.h	/^    unsigned long long int get_image_end_time;$/;"	m	struct:_kernelexecutioninfo
get_image_start_time	core.h	/^    unsigned long long int get_image_start_time;$/;"	m	struct:_kernelexecutioninfo
get_input_buffer_sizes	benchmark_synthesis/cnn_new/fusion_template.py	/^    def get_input_buffer_sizes(self):$/;"	m	class:Gemm
get_input_buffer_sizes	benchmark_synthesis/dnn_new/dnn.py	/^    def get_input_buffer_sizes(self):$/;"	m	class:DNN
get_input_buffer_sizes	benchmark_synthesis/dnn_new/fusion_template.py	/^    def get_input_buffer_sizes(self):$/;"	m	class:Gemm
get_kernel_children_ids	benchmark_synthesis/cnn_new/fusion_template.py	/^    def get_kernel_children_ids(self, kid):$/;"	m	class:DNN
get_kernel_children_ids	benchmark_synthesis/dnn_new/fusion_template.py	/^    def get_kernel_children_ids(self, kid):$/;"	m	class:DNN
get_kernel_ids	benchmark_synthesis/cnn_new/fusion_template.py	/^    def get_kernel_ids(self):$/;"	m	class:FusedKernel
get_kernel_ids	benchmark_synthesis/dnn_new/fusion_template.py	/^    def get_kernel_ids(self):$/;"	m	class:FusedKernel
get_kernel_parent_ids	benchmark_synthesis/cnn_new/fusion_template.py	/^    def get_kernel_parent_ids(self, kid):$/;"	m	class:DNN
get_kernel_parent_ids	benchmark_synthesis/dnn_new/fusion_template.py	/^    def get_kernel_parent_ids(self, kid):$/;"	m	class:DNN
get_kernels	benchmark_synthesis/cnn_new/fusion_template.py	/^    def get_kernels(self):$/;"	m	class:FusedKernel
get_kernels	benchmark_synthesis/dnn_new/fusion_template.py	/^    def get_kernels(self):$/;"	m	class:FusedKernel
get_output_buffer_sizes	benchmark_synthesis/cnn_new/fusion_template.py	/^    def get_output_buffer_sizes(self):$/;"	m	class:Gemm
get_output_buffer_sizes	benchmark_synthesis/dnn_new/dnn.py	/^    def get_output_buffer_sizes(self):$/;"	m	class:DNN
get_output_buffer_sizes	benchmark_synthesis/dnn_new/fusion_template.py	/^    def get_output_buffer_sizes(self):$/;"	m	class:Gemm
get_queue_submit	core.h	/^    unsigned long long int get_queue_submit()$/;"	f	struct:_event
get_skeleton_subgraph	benchmark_synthesis/cnn_new/fusion_template.py	/^    def get_skeleton_subgraph(self, kernel_ids):$/;"	m	class:DNN
get_skeleton_subgraph	benchmark_synthesis/dnn_new/fusion_template.py	/^    def get_skeleton_subgraph(self, kernel_ids):$/;"	m	class:DNN
get_start_end	core.h	/^    unsigned long long int get_start_end()$/;"	f	struct:_event
get_submit_start	core.h	/^    unsigned long long int get_submit_start()$/;"	f	struct:_event
get_task_component_children	benchmark_synthesis/cnn_new/fusion_template.py	/^    def get_task_component_children(self, task_component):$/;"	m	class:DNN
get_task_component_children	benchmark_synthesis/dnn_new/fusion_template.py	/^    def get_task_component_children(self, task_component):$/;"	m	class:DNN
get_task_component_parents	benchmark_synthesis/cnn_new/fusion_template.py	/^    def get_task_component_parents(self, task_component):$/;"	m	class:DNN
get_task_component_parents	benchmark_synthesis/dnn_new/fusion_template.py	/^    def get_task_component_parents(self, task_component):$/;"	m	class:DNN
get_timestamp	core.h	/^    unsigned long long int get_timestamp(std::string command)$/;"	f	struct:_event
get_variable_values	benchmark_synthesis/cnn_new/fusion_template.py	/^    def get_variable_values(self):$/;"	m	class:Gemm
get_variable_values	benchmark_synthesis/dnn_new/fusion_template.py	/^    def get_variable_values(self):$/;"	m	class:Gemm
get_variables	benchmark_synthesis/dnn_new/dnn.py	/^    def get_variables(self,variables):$/;"	m	class:DNN
gfloat	core.h	/^std::vector<float> gfloat;$/;"	v
gfloat	functionalities.h	/^std::vector<float> gfloat;$/;"	v
gint	core.h	/^std::vector<int> gint;$/;"	v
gint	functionalities.h	/^std::vector<int> gint;$/;"	v
globalDAGID	core.h	/^    int globalDAGID;$/;"	m	struct:_daginfo
globalDAGID	functionalities.h	/^    int globalDAGID;$/;"	m	struct:_daginfo
globalWorkSize	core.h	/^    size_t globalWorkSize[3];$/;"	m	struct:_kernelinfo
globalWorkSize	functionalities.h	/^    size_t globalWorkSize[3];$/;"	m	struct:_kernelinfo
global_dagid	automation.py	/^global_dagid = '0'$/;"	v
global_dagid	generate_profile_dispatch_history.py	/^    global_dagid = 0$/;"	v
global_ids	benchmark_synthesis/cnn_new/cnn.py	/^    def global_ids(self):$/;"	m	class:CNN
global_ids	benchmark_synthesis/dnn_new/dnn.py	/^    def global_ids(self):$/;"	m	class:DNN
glong	core.h	/^std::vector<long> glong;$/;"	v
glong	functionalities.h	/^std::vector<long> glong;$/;"	v
gpu_4	core.h	/^    int gpu_4;$/;"	m	struct:_temperature
gpu_4	functionalities.h	/^    int gpu_4;$/;"	m	struct:_temperature
gshort	core.h	/^std::vector<short> gshort;$/;"	v
gshort	functionalities.h	/^std::vector<short> gshort;$/;"	v
guint	core.h	/^std::vector<uint> guint;$/;"	v
guint	functionalities.h	/^std::vector<uint> guint;$/;"	v
gulong	core.h	/^std::vector<ulong> gulong;$/;"	v
gulong	functionalities.h	/^std::vector<ulong> gulong;$/;"	v
gushort	core.h	/^std::vector<ushort> gushort;$/;"	v
gushort	functionalities.h	/^std::vector<ushort> gushort;$/;"	v
highFrequencyBound	core.h	/^    unsigned int highFrequencyBound;$/;"	m	struct:_deviceSpecification
highFrequencyBound	functionalities.h	/^    unsigned int highFrequencyBound;$/;"	m	struct:_deviceSpecification
hyper_period	core.h	/^unsigned long long int hyper_period;$/;"	v
hyper_period	functionalities.h	/^unsigned long long int hyper_period;$/;"	v
i	benchmark_synthesis/cnn_combined/add_persistent_buffers.py	/^            i=i+1        $/;"	v
i	benchmark_synthesis/cnn_combined/add_persistent_buffers.py	/^        i=0$/;"	v
init_gemm	benchmark_synthesis/cnn_new/fusion_template.py	/^    def init_gemm(self, index):$/;"	m	class:DNN
init_gemm	benchmark_synthesis/dnn_new/fusion_template.py	/^    def init_gemm(self, index):$/;"	m	class:DNN
init_matrix_coordinates	benchmark_synthesis/cnn_new/fusion_template.py	/^    def init_matrix_coordinates(self):$/;"	m	class:Gemm
init_matrix_coordinates	benchmark_synthesis/dnn_new/fusion_template.py	/^    def init_matrix_coordinates(self):$/;"	m	class:Gemm
init_private_variables	benchmark_synthesis/cnn_new/fusion_template.py	/^    def init_private_variables(self):$/;"	m	class:Gemm
init_private_variables	benchmark_synthesis/dnn_new/dnn.py	/^    def init_private_variables(self):$/;"	m	class:DNN
init_private_variables	benchmark_synthesis/dnn_new/fusion_template.py	/^    def init_private_variables(self):$/;"	m	class:Gemm
init_private_variables_conv	benchmark_synthesis/cnn_new/cnn.py	/^    def init_private_variables_conv(self):$/;"	m	class:CNN
init_private_variables_linear	benchmark_synthesis/cnn_new/cnn.py	/^    def init_private_variables_linear(self):$/;"	m	class:CNN
init_private_variables_pool	benchmark_synthesis/cnn_new/cnn.py	/^    def init_private_variables_pool(self):        $/;"	m	class:CNN
init_private_variables_sfmax	benchmark_synthesis/cnn_new/cnn.py	/^    def init_private_variables_sfmax(self):$/;"	m	class:CNN
init_shared_memory	benchmark_synthesis/cnn_new/fusion_template.py	/^    def init_shared_memory(self):$/;"	m	class:Gemm
init_shared_memory	benchmark_synthesis/dnn_new/fusion_template.py	/^    def init_shared_memory(self):$/;"	m	class:Gemm
initialise_kernel_info	benchmark_synthesis/cnn_new/cnn.py	/^    def initialise_kernel_info(self):$/;"	m	class:CNN
initialise_kernel_info	benchmark_synthesis/dnn_new/dnn.py	/^    def initialise_kernel_info(self):$/;"	m	class:DNN
inputBuffers	core.h	/^    std::vector < std::tuple <std::string, unsigned int, unsigned int, unsigned int> > inputBuffers;$/;"	m	struct:_kernelinfo
inputBuffers	functionalities.h	/^    std::vector < std::tuple <std::string, unsigned int, unsigned int> > inputBuffers;$/;"	m	struct:_kernelinfo
input_arg	scripts/observe_variations.py	/^	input_arg = sys.argv[1]$/;"	v
instanceID	core.h	/^    int instanceID;$/;"	m	struct:_daginfo
instanceID	functionalities.h	/^    int instanceID;$/;"	m	struct:_daginfo
instanceid	automation.py	/^instanceid = '0'$/;"	v
instanceid	generate_profile_dispatch_history.py	/^    instanceid = 0$/;"	v
intervalWidth	core.h	/^    unsigned long long int intervalWidth;$/;"	m	struct:_interval
intervalWidth	functionalities.h	/^    unsigned long long int intervalWidth;$/;"	m	struct:_interval
io	core.h	/^    std::vector<cl_mem> io;$/;"	m	struct:_kernellaunchinfo
io	functionalities.h	/^    std::vector<cl_mem> io;$/;"	m	struct:_kernellaunchinfo
ioBuffers	core.h	/^    std::vector < std::tuple <std::string, unsigned int, unsigned int, unsigned int> > ioBuffers;$/;"	m	struct:_kernelinfo
ioBuffers	functionalities.h	/^    std::vector < std::tuple <std::string, unsigned int, unsigned int> > ioBuffers;$/;"	m	struct:_kernelinfo
ip_buf	benchmark_synthesis/cnn_combined/add_persistent_buffers.py	/^        ip_buf=data[4].rstrip()$/;"	v
ipbuffsize	benchmark_synthesis/cnn_new/test.py	/^            ipbuffsize = 0$/;"	v
ipbuffsize	benchmark_synthesis/dnn_new/test.py	/^            ipbuffsize = 2 * depth + 1$/;"	v
isDependent	automation.py	/^isDependent = '-1'$/;"	v
isDependent	generate_profile_dispatch_history.py	/^    isDependent = -1$/;"	v
isProfileMode	core.h	/^int isProfileMode;$/;"	v
isProfileMode	functionalities.h	/^int isProfileMode;$/;"	v
isTerminal	automation.py	/^isTerminal = '1'$/;"	v
isTerminal	core.h	/^    int isTerminal;$/;"	m	struct:_taskinfo
isTerminal	functionalities.h	/^    int isTerminal;$/;"	m	struct:_taskinfo
isTerminal	generate_profile_dispatch_history.py	/^    isTerminal = 1$/;"	v
is_profiled	core.h	/^    int is_profiled;$/;"	m	struct:_kernel_events
is_profiled	functionalities.h	/^    int is_profiled;$/;"	m	struct:_kernel_events
jobID	core.h	/^    int jobID;$/;"	m	struct:_daginfo
jobID	core.h	/^    int jobID;$/;"	m	struct:_jobinfo
jobID	functionalities.h	/^    int jobID;$/;"	m	struct:_daginfo
jobID	functionalities.h	/^    int jobID;$/;"	m	struct:_jobinfo
job_id	automation.py	/^job_id = sys.argv[1];$/;"	v
job_id	generate_profile_dispatch_history.py	/^    job_id = sys.argv[1];# 0 and 1 dnn cnn$/;"	v
ke	core.h	/^    KernelEvents ke;$/;"	m	struct:_kernellaunchinfo
ke	functionalities.h	/^    KernelEvents ke;$/;"	m	struct:_kernellaunchinfo
kernelObject	core.h	/^    cl_kernel kernelObject;$/;"	m	struct:_kernelinfo
kernelObject	functionalities.h	/^    cl_kernel kernelObject;$/;"	m	struct:_kernelinfo
kernelObjects	core.h	/^    std::vector<cl_kernel> kernelObjects;$/;"	m	struct:_kernelinfo
kernelObjects	functionalities.h	/^    std::vector<cl_kernel> kernelObjects;$/;"	m	struct:_kernelinfo
kernelSource	core.h	/^    std::string kernelSource;$/;"	m	struct:_kernelinfo
kernelSource	functionalities.h	/^    std::string kernelSource;$/;"	m	struct:_kernelinfo
kernel_fusion	benchmark_synthesis/cnn_new/fusion_template.py	/^    def kernel_fusion(self, node_ids):$/;"	m	class:DNN
kernel_fusion	benchmark_synthesis/dnn_new/fusion_template.py	/^    def kernel_fusion(self, node_ids):$/;"	m	class:DNN
kernel_index	core.h	/^    int kernel_index;$/;"	m	struct:_kernellaunchinfo
kernel_index	functionalities.h	/^    int kernel_index;$/;"	m	struct:_kernellaunchinfo
kernel_name	benchmark_synthesis/cnn_new/test.py	/^            kernel_name = "cnn_" + uid$/;"	v
kernel_name	benchmark_synthesis/dnn_new/test.py	/^            kernel_name = "dnn_" + uid$/;"	v
kernels	core.h	/^    std::vector <KernelInfo *>kernels;$/;"	m	struct:_taskinfo
kernels	functionalities.h	/^    std::vector <KernelInfo *>kernels;$/;"	m	struct:_taskinfo
kex	core.h	/^    KernelExecutionInfo kex;$/;"	m	struct:_kernellaunchinfo
kex	functionalities.h	/^    KernelExecutionInfo kex;$/;"	m	struct:_kernellaunchinfo
klinfo	core.h	/^    KernelLaunchInfo* klinfo;$/;"	m	struct:_DAGtime
klinfo	functionalities.h	/^    KernelLaunchInfo* klinfo;$/;"	m	struct:_DAGtime
l_deadline	automation.py	/^l_deadline = '999.0'$/;"	v
last_speedup	core.h	/^    float last_speedup;$/;"	m	struct:_kernellaunchinfo
last_speedup	functionalities.h	/^    float last_speedup;$/;"	m	struct:_kernellaunchinfo
lateness	core.h	/^    float lateness;$/;"	m	struct:_DAGtime
lateness	functionalities.h	/^    float lateness;$/;"	m	struct:_DAGtime
lines	automation.py	/^lines = open('configure_input.txt').read().splitlines()$/;"	v
load	benchmark_synthesis/cnn_new/cnn.py	/^    def load(self):$/;"	m	class:CNN
load	benchmark_synthesis/cnn_new/fusion_template.py	/^    def load(self):$/;"	m	class:Gemm
load	benchmark_synthesis/cnn_new/fusion_template.py	/^    def load(self):$/;"	m	class:Kernel
load	benchmark_synthesis/dnn_new/dnn.py	/^    def load(self):$/;"	m	class:DNN
load	benchmark_synthesis/dnn_new/fusion_template.py	/^    def load(self):$/;"	m	class:Gemm
load	benchmark_synthesis/dnn_new/fusion_template.py	/^    def load(self):$/;"	m	class:Kernel
load_compute_store	benchmark_synthesis/cnn_new/fusion_template.py	/^    def load_compute_store(self):  # M,N,K$/;"	m	class:Gemm
load_compute_store	benchmark_synthesis/dnn_new/dnn.py	/^    def load_compute_store(self,depth):$/;"	m	class:DNN
load_compute_store	benchmark_synthesis/dnn_new/fusion_template.py	/^    def load_compute_store(self):  # M,N,K$/;"	m	class:Gemm
load_compute_store_conv	benchmark_synthesis/cnn_new/cnn.py	/^    def load_compute_store_conv(self,depth,layer_index):$/;"	m	class:CNN
load_compute_store_linear	benchmark_synthesis/cnn_new/cnn.py	/^    def load_compute_store_linear(self,depth,layer_index):$/;"	m	class:CNN
load_compute_store_pool	benchmark_synthesis/cnn_new/cnn.py	/^    def load_compute_store_pool(self,depth,layer_index):$/;"	m	class:CNN
load_compute_store_softmax	benchmark_synthesis/cnn_new/cnn.py	/^    def load_compute_store_softmax(self,depth,layer_index):$/;"	m	class:CNN
localArguments	core.h	/^    std::vector < std::tuple <std::string, unsigned int, unsigned int> > localArguments;$/;"	m	struct:_kernelinfo
localArguments	functionalities.h	/^    std::vector < std::tuple <std::string, unsigned int, unsigned int> > localArguments;$/;"	m	struct:_kernelinfo
localSizeFactor	core.h	/^    std::vector <float> localSizeFactor;$/;"	m	struct:_kernelinfo
localSizeFactor	functionalities.h	/^    std::vector <float> localSizeFactor;$/;"	m	struct:_kernelinfo
localWorkSize	core.h	/^    size_t localWorkSize[3];$/;"	m	struct:_kernelinfo
localWorkSize	functionalities.h	/^    size_t localWorkSize[3];$/;"	m	struct:_kernelinfo
lowFrequencyBound	core.h	/^    unsigned int lowFrequencyBound; \/\/= frequencies[0];$/;"	m	struct:_deviceSpecification
lowFrequencyBound	functionalities.h	/^    unsigned int lowFrequencyBound; \/\/= frequencies[0];$/;"	m	struct:_deviceSpecification
main	run_kernel.cpp	/^int main(int argc, char const *argv[])$/;"	f
main	schedcl.cpp	/^int main(int argc, char const *argv[])$/;"	f
main	scheduler.cpp	/^int main(int argc, char const *argv[])$/;"	f
make_directory	scripts/profile_overheads.py	/^	make_directory = "mkdir profile_statistics\/"+filename+"\/"$/;"	v
makespan	core.h	/^    float makespan;$/;"	m	struct:_DAGtime
makespan	functionalities.h	/^    float makespan;$/;"	m	struct:_DAGtime
mean	scripts/observe_variations.py	/^			mean = np.mean(profile_map[id_values][key])$/;"	v
merge_independent_task_components	benchmark_synthesis/cnn_new/fusion_template.py	/^    def merge_independent_task_components(self, t1, t2):$/;"	m	class:DNN
merge_independent_task_components	benchmark_synthesis/dnn_new/fusion_template.py	/^    def merge_independent_task_components(self, t1, t2):$/;"	m	class:DNN
merge_task_components	benchmark_synthesis/cnn_new/fusion_template.py	/^    def merge_task_components(self, t1, t2):$/;"	m	class:DNN
merge_task_components	benchmark_synthesis/dnn_new/fusion_template.py	/^    def merge_task_components(self, t1, t2):$/;"	m	class:DNN
merge_task_list	benchmark_synthesis/cnn_new/fusion_template.py	/^    def merge_task_list(self, t):$/;"	m	class:DNN
merge_task_list	benchmark_synthesis/dnn_new/fusion_template.py	/^    def merge_task_list(self, t):$/;"	m	class:DNN
mico_kernel	automation.py	/^    mico_kernel = '0'$/;"	v
mico_kernel	automation.py	/^mico_kernel = '1'$/;"	v
micro_kernel_device	core.h	/^int micro_kernel_device;$/;"	v
micro_kernel_device	functionalities.h	/^int micro_kernel_device;$/;"	v
micro_kernel_device	run_profiling.py	/^            micro_kernel_device = 0$/;"	v
micro_kernel_device	run_profiling.py	/^            micro_kernel_device = 1$/;"	v
micro_kernel_device	run_profiling.py	/^        micro_kernel_device = -1$/;"	v
microkernel_start	core.h	/^int microkernel_start=0;$/;"	v
midFrequency	core.h	/^    unsigned int midFrequency; \/\/= frequencies[frequencies.size() - 1]; $/;"	m	struct:_deviceSpecification
midFrequency	functionalities.h	/^    unsigned int midFrequency; \/\/= frequencies[frequencies.size() - 1]; $/;"	m	struct:_deviceSpecification
monitorTemp	core.h	/^int monitorTemp;$/;"	v
monitorTemp	functionalities.h	/^int monitorTemp;$/;"	v
mtx_devlock	core.h	/^std::mutex mtx_devlock;$/;"	v
mtx_devlock	functionalities.h	/^std::mutex mtx_devlock;$/;"	v
mtx_kernel_finished	core.h	/^std::mutex mtx_kernel_finished;$/;"	v
mtx_nlock	core.h	/^std::mutex mtx_nlock;$/;"	v
mtx_nlock	functionalities.h	/^std::mutex mtx_nlock;$/;"	v
mtx_rblock	core.h	/^std::mutex mtx_rblock;$/;"	v
mtx_rblock	functionalities.h	/^std::mutex mtx_rblock;$/;"	v
nKernels	core.h	/^int nKernels=0;$/;"	v
nKernels	functionalities.h	/^int nKernels=0;$/;"	v
nTasks	core.h	/^int nTasks=0;$/;"	v
nTasks	functionalities.h	/^int nTasks=0;$/;"	v
ndEnd	core.h	/^    unsigned long long int  ndEnd;$/;"	m	struct:_kernelexecutioninfo
ndEnd	functionalities.h	/^    unsigned long long int  ndEnd;$/;"	m	struct:_kernelexecutioninfo
ndQueued	core.h	/^    unsigned long long int  ndQueued;$/;"	m	struct:_kernelexecutioninfo
ndQueued	functionalities.h	/^    unsigned long long int  ndQueued;$/;"	m	struct:_kernelexecutioninfo
ndStart	core.h	/^    unsigned long long int  ndStart;$/;"	m	struct:_kernelexecutioninfo
ndStart	core.h	/^    unsigned long long int ndStart;$/;"	m	struct:_DAGtime
ndStart	functionalities.h	/^    unsigned long long int  ndStart;$/;"	m	struct:_kernelexecutioninfo
ndStart	functionalities.h	/^    unsigned long long int ndStart;$/;"	m	struct:_DAGtime
ndSubmit	core.h	/^    unsigned long long int  ndSubmit;$/;"	m	struct:_kernelexecutioninfo
ndSubmit	functionalities.h	/^    unsigned long long int  ndSubmit;$/;"	m	struct:_kernelexecutioninfo
ndTime	core.h	/^    unsigned long long int  ndTime;$/;"	m	struct:_kernelexecutioninfo
ndTime	functionalities.h	/^    unsigned long long int  ndTime;$/;"	m	struct:_kernelexecutioninfo
nd_end	core.h	/^    unsigned long long int  nd_end;$/;"	m	struct:_kernelexecutioninfo
nd_end	functionalities.h	/^    unsigned long long int  nd_end;$/;"	m	struct:_kernelexecutioninfo
nd_start	core.h	/^    unsigned long long int  nd_start;$/;"	m	struct:_kernelexecutioninfo
nd_start	functionalities.h	/^    unsigned long long int  nd_start;$/;"	m	struct:_kernelexecutioninfo
nd_start_h	core.h	/^    unsigned long long int  nd_start_h;$/;"	m	struct:_kernelexecutioninfo
nd_start_h	functionalities.h	/^    unsigned long long int  nd_start_h;$/;"	m	struct:_kernelexecutioninfo
nd_time	core.h	/^    unsigned long long int  nd_time;$/;"	m	struct:_kernelexecutioninfo
nd_time	functionalities.h	/^    unsigned long long int  nd_time;$/;"	m	struct:_kernelexecutioninfo
nlock	core.h	/^int nlock=0;$/;"	v
nlock	functionalities.h	/^int nlock=0;$/;"	v
noIOBuffers	core.h	/^    unsigned int noIOBuffers;$/;"	m	struct:_kernelinfo
noIOBuffers	functionalities.h	/^    unsigned int noIOBuffers;$/;"	m	struct:_kernelinfo
noInputBuffers	core.h	/^    unsigned int noInputBuffers;$/;"	m	struct:_kernelinfo
noInputBuffers	functionalities.h	/^    unsigned int noInputBuffers;$/;"	m	struct:_kernelinfo
noOutputBuffers	core.h	/^    unsigned int noOutputBuffers;$/;"	m	struct:_kernelinfo
noOutputBuffers	functionalities.h	/^    unsigned int noOutputBuffers;$/;"	m	struct:_kernelinfo
no_micro_kernel	core.h	/^int no_micro_kernel=0;$/;"	v
no_micro_kernel	functionalities.h	/^int no_micro_kernel=0;$/;"	v
nodes	core.h	/^    std::vector < int> nodes;$/;"	m	struct:_taskinfo
nodes	functionalities.h	/^    std::vector < int> nodes;$/;"	m	struct:_taskinfo
nodesNum	benchmark_synthesis/dnn_new/fusion_template.py	/^nodesNum=5$/;"	v
nonPartition	core.h	/^    std::vector < unsigned long long int> nonPartition;  $/;"	m	struct:_kernelinfo
nonPartition	functionalities.h	/^    std::vector < unsigned long long int> nonPartition;  $/;"	m	struct:_kernelinfo
not_done_count	core.h	/^    unsigned int not_done_count;$/;"	m	struct:_kernellaunchinfo
not_done_count	functionalities.h	/^    unsigned int not_done_count;$/;"	m	struct:_kernellaunchinfo
notify_callback_rel_end_time	core.h	/^    unsigned long long int  notify_callback_rel_end_time;$/;"	m	struct:_kernelexecutioninfo
notify_callback_rel_end_time	functionalities.h	/^    unsigned long long int  notify_callback_rel_end_time;$/;"	m	struct:_kernelexecutioninfo
notify_callback_rel_start_time	core.h	/^    unsigned long long int  notify_callback_rel_start_time;$/;"	m	struct:_kernelexecutioninfo
notify_callback_rel_start_time	functionalities.h	/^    unsigned long long int  notify_callback_rel_start_time;$/;"	m	struct:_kernelexecutioninfo
notify_cb_buffer_c	core.h	/^unsigned long long int notify_cb_buffer_c=0;$/;"	v
notify_cb_buffer_c	functionalities.h	/^unsigned long long int notify_cb_buffer_c=0;$/;"	v
notify_cb_buffer_g	core.h	/^unsigned long long int notify_cb_buffer_g=0; $/;"	v
notify_cb_buffer_g	functionalities.h	/^unsigned long long int notify_cb_buffer_g=0; $/;"	v
numOfDAGs	core.h	/^int numOfDAGs;$/;"	v
numOfDAGs	functionalities.h	/^int numOfDAGs;$/;"	v
numOfEdges	core.h	/^    int numOfEdges;$/;"	m	struct:_jobinfo
numOfEdges	functionalities.h	/^    int numOfEdges;$/;"	m	struct:_jobinfo
numOfHyperperiod	core.h	/^int numOfHyperperiod;$/;"	v
numOfHyperperiod	functionalities.h	/^int numOfHyperperiod;$/;"	v
numOfNodes	core.h	/^    int numOfNodes;$/;"	m	struct:_jobinfo
numOfNodes	functionalities.h	/^    int numOfNodes;$/;"	m	struct:_jobinfo
num_args	benchmark_synthesis/cnn_new/test.py	/^            num_args = cnn[-1].num_input_buffers + cnn[-1].num_output_buffers$/;"	v
num_args	benchmark_synthesis/dnn_new/test.py	/^            num_args = dnn[-1].num_input_buffers + dnn[-1].num_output_buffers$/;"	v
num_profile_kernels	core.h	/^int num_profile_kernels=0; \/\/ required for profiling scripts$/;"	v
offset	core.h	/^    unsigned int offset;$/;"	m	struct:_kernellaunchinfo
offset	functionalities.h	/^    unsigned int offset;$/;"	m	struct:_kernellaunchinfo
op_buf	benchmark_synthesis/cnn_combined/add_persistent_buffers.py	/^        op_buf=data[5].rstrip()$/;"	v
opbuffsize	benchmark_synthesis/cnn_new/test.py	/^            opbuffsize = 0$/;"	v
opbuffsize	benchmark_synthesis/dnn_new/test.py	/^            opbuffsize = 1 * depth$/;"	v
options	core.h	/^    std::string options;$/;"	m	struct:_kernelinfo
options	functionalities.h	/^    std::string options;$/;"	m	struct:_kernelinfo
outputBuffers	core.h	/^    std::vector < std::tuple <std::string, unsigned int, unsigned int, unsigned int> > outputBuffers;$/;"	m	struct:_kernelinfo
outputBuffers	functionalities.h	/^    std::vector < std::tuple <std::string, unsigned int, unsigned int> > outputBuffers;$/;"	m	struct:_kernelinfo
outputbuffer	core.h	/^std::string outputbuffer;$/;"	v
outputbuffer	functionalities.h	/^std::string outputbuffer;$/;"	v
p_list	benchmark_synthesis/cnn_combined/add_persistent_buffers.py	/^        p_list = parameters.split(",")$/;"	v
p_string	benchmark_synthesis/cnn_combined/add_persistent_buffers.py	/^                p_string=p_string+p+","$/;"	v
p_string	benchmark_synthesis/cnn_combined/add_persistent_buffers.py	/^                p_string=p_string+p+",0,"$/;"	v
p_string	benchmark_synthesis/cnn_combined/add_persistent_buffers.py	/^                p_string=p_string+p+",1,"$/;"	v
p_string	benchmark_synthesis/cnn_combined/add_persistent_buffers.py	/^        p_string= p_string[:-1]+"\\n"$/;"	v
params	generate_profile_dispatch_history.py	/^            params = str(job_id) + "," +str(start_node) + "," + str(fused_kernel) +  "," + str(isDependent)  + "," + str(platform_id) + "," + str(device_id) + "," + str(deadline) + "," + str(arrivaltime) + "," + str(safetytime) + "," + str(isTerminal) + "," + str(global_dagid) + "," + str(instanceid) + "," + str(frequency)$/;"	v
path	automation.py	/^    path = "tinfo\/DAG_"+ job$/;"	v
path	automation.py	/^path = "tinfo_full\/DAG_"+ job_id$/;"	v
path	benchmark_synthesis/cnn_combined/add_persistent_buffers.py	/^path = ".\/tinfo_old\/"$/;"	v
path	generate_profile_dispatch_history.py	/^    path = "tinfo\/DAG_"+str(job_id)$/;"	v
path1	automation.py	/^path1 = "tinfo\/DAG_"+ job_id$/;"	v
platform_id	automation.py	/^platform_id = sys.argv[4]$/;"	v
platform_pos	core.h	/^    int platform_pos;$/;"	m	struct:_kernellaunchinfo
platform_pos	functionalities.h	/^    int platform_pos;$/;"	m	struct:_kernellaunchinfo
powerup	core.h	/^    float powerup;$/;"	m	struct:_devConfig
powerup	functionalities.h	/^    float powerup;$/;"	m	struct:_devConfig
print	core.h	/^    void print()$/;"	f	struct:_event
print	core.h	/^    void print()$/;"	f	struct:_kernel_events
print_profile_event_status	core.h	/^void print_profile_event_status(cl_int status)$/;"	f
priority	core.h	/^    int priority;$/;"	m	struct:_kernellaunchinfo
priority	functionalities.h	/^    int priority;$/;"	m	struct:_kernellaunchinfo
processed	core.h	/^bool processed = false;$/;"	v
profile_contents	scripts/observe_variations.py	/^		profile_contents = f.readlines()$/;"	v
profile_map	scripts/observe_variations.py	/^	profile_map = defaultdict(lambda: defaultdict(list))$/;"	v
profilekernel_start	core.h	/^int profilekernel_start=0;$/;"	v
queued	core.h	/^    int queued;  $/;"	m	struct:_kernellaunchinfo
queued	functionalities.h	/^    int queued;  $/;"	m	struct:_kernellaunchinfo
raceToIdle	core.h	/^int raceToIdle;$/;"	v
raceToIdle	functionalities.h	/^int raceToIdle;$/;"	v
rblock	core.h	/^int rblock=0;$/;"	v
rblock	functionalities.h	/^int rblock=0;$/;"	v
read	core.h	/^    std::vector<cl_event> read;$/;"	m	struct:_kernel_events
read	functionalities.h	/^    std::vector<cl_event> read;$/;"	m	struct:_kernel_events
readEnd	core.h	/^    unsigned long long int  readEnd;$/;"	m	struct:_kernelexecutioninfo
readEnd	functionalities.h	/^    unsigned long long int  readEnd;$/;"	m	struct:_kernelexecutioninfo
readQueued	core.h	/^    unsigned long long int  readQueued; $/;"	m	struct:_kernelexecutioninfo
readQueued	functionalities.h	/^    unsigned long long int  readQueued; $/;"	m	struct:_kernelexecutioninfo
readStart	core.h	/^    unsigned long long int  readStart;$/;"	m	struct:_kernelexecutioninfo
readStart	core.h	/^    unsigned long long int readStart;$/;"	m	struct:_DAGtime
readStart	functionalities.h	/^    unsigned long long int  readStart;$/;"	m	struct:_kernelexecutioninfo
readStart	functionalities.h	/^    unsigned long long int readStart;$/;"	m	struct:_DAGtime
readSubmit	core.h	/^    unsigned long long int  readSubmit;   $/;"	m	struct:_kernelexecutioninfo
readSubmit	functionalities.h	/^    unsigned long long int  readSubmit;   $/;"	m	struct:_kernelexecutioninfo
readTime	core.h	/^    unsigned long long int  readTime; $/;"	m	struct:_kernelexecutioninfo
readTime	functionalities.h	/^    unsigned long long int  readTime; $/;"	m	struct:_kernelexecutioninfo
read_end	core.h	/^    unsigned long long int  read_end;$/;"	m	struct:_kernelexecutioninfo
read_end	functionalities.h	/^    unsigned long long int  read_end;$/;"	m	struct:_kernelexecutioninfo
read_file	core.h	/^int read_file(unsigned char **output, size_t *size, const char *name) $/;"	f
read_start	core.h	/^    unsigned long long int  read_start;$/;"	m	struct:_kernelexecutioninfo
read_start	functionalities.h	/^    unsigned long long int  read_start;$/;"	m	struct:_kernelexecutioninfo
read_start_h	core.h	/^    unsigned long long int  read_start_h;$/;"	m	struct:_kernelexecutioninfo
read_start_h	functionalities.h	/^    unsigned long long int  read_start_h;$/;"	m	struct:_kernelexecutioninfo
read_time	core.h	/^    unsigned long long int  read_time;$/;"	m	struct:_kernelexecutioninfo
read_time	functionalities.h	/^    unsigned long long int  read_time;$/;"	m	struct:_kernelexecutioninfo
rel_end_time	core.h	/^    unsigned long long int  rel_end_time; \/\/notify_callback start Rtime, read end Rtime $/;"	m	struct:_kernelexecutioninfo
rel_end_time	functionalities.h	/^    unsigned long long int  rel_end_time; \/\/notify_callback start Rtime, read end Rtime $/;"	m	struct:_kernelexecutioninfo
rel_start_time	core.h	/^    unsigned long long int  rel_start_time; \/\/dispatch start Rtime $/;"	m	struct:_kernelexecutioninfo
rel_start_time	functionalities.h	/^    unsigned long long int  rel_start_time; \/\/dispatch start Rtime $/;"	m	struct:_kernelexecutioninfo
reset	core.h	/^    int reset;  $/;"	m	struct:_kernellaunchinfo
reset	functionalities.h	/^    int reset;  $/;"	m	struct:_kernellaunchinfo
rows	generate_profile_dispatch_history.py	/^    rows = []$/;"	v
run_command	scripts/profile_overheads.py	/^	run_command = "taskset -c 3-7 .\/scheduler trace\/dispatch_history_0.stats profile_statistics\/"+filename+"\/"$/;"	v
run_kernel_lock	core.h	/^std::mutex run_kernel_lock;$/;"	v
safe_duration	core.h	/^unsigned long long int safe_duration=0;$/;"	v
safe_duration	functionalities.h	/^unsigned long long int safe_duration=0;$/;"	v
safe_mode	core.h	/^    int safe_mode;$/;"	m	struct:_DAGtime
safe_mode	functionalities.h	/^    int safe_mode;$/;"	m	struct:_DAGtime
safetytime	generate_profile_dispatch_history.py	/^    safetytime = 9999.999$/;"	v
sensors	core.h	/^    std::vector<int> sensors;$/;"	m	struct:_temperature
sensors	functionalities.h	/^    std::vector<int> sensors;$/;"	m	struct:_temperature
set_kernel_info	benchmark_synthesis/cnn_new/cnn.py	/^    def set_kernel_info(self):$/;"	m	class:CNN
set_kernel_info	benchmark_synthesis/cnn_new/fusion_template.py	/^    def set_kernel_info(self):$/;"	m	class:FusedKernel
set_kernel_info	benchmark_synthesis/cnn_new/fusion_template.py	/^    def set_kernel_info(self):$/;"	m	class:Gemm
set_kernel_info	benchmark_synthesis/dnn_new/dnn.py	/^    def set_kernel_info(self):$/;"	m	class:DNN
set_kernel_info	benchmark_synthesis/dnn_new/fusion_template.py	/^    def set_kernel_info(self):$/;"	m	class:FusedKernel
set_kernel_info	benchmark_synthesis/dnn_new/fusion_template.py	/^    def set_kernel_info(self):$/;"	m	class:Gemm
set_num_tiles	benchmark_synthesis/cnn_new/fusion_template.py	/^    def set_num_tiles(self, v1):$/;"	m	class:Gemm
set_num_tiles	benchmark_synthesis/dnn_new/fusion_template.py	/^    def set_num_tiles(self, v1):$/;"	m	class:Gemm
size	core.h	/^    unsigned int size;$/;"	m	struct:_kernellaunchinfo
size	functionalities.h	/^    unsigned int size;$/;"	m	struct:_kernellaunchinfo
speedup	core.h	/^    float speedup;$/;"	m	struct:_devConfig
speedup	functionalities.h	/^    float speedup;$/;"	m	struct:_devConfig
src_file	benchmark_synthesis/cnn_new/test.py	/^            src_file = ".\/CNN\/src\/cnn_" + uid + ".cl"$/;"	v
src_file	benchmark_synthesis/dnn_new/test.py	/^            src_file = ".\/DNN\/src\/dnn_" + uid + ".cl"$/;"	v
src_file_loc	benchmark_synthesis/cnn_new/test.py	/^            src_file_loc = "\/DAG_1\/" + "cnn_" + uid +".cl"$/;"	v
src_file_loc	benchmark_synthesis/dnn_new/test.py	/^            src_file_loc ="\/DAG_0\/dnn_" + uid + ".cl"$/;"	v
start	core.h	/^    unsigned long long int start;$/;"	m	struct:_interval
start	core.h	/^    unsigned long long int start;$/;"	m	struct:_kernellaunchinfo
start	functionalities.h	/^    unsigned long long int start;$/;"	m	struct:_interval
start	functionalities.h	/^    unsigned long long int start;$/;"	m	struct:_kernellaunchinfo
startTime	core.h	/^    unsigned long long int startTime;$/;"	m	struct:_DAGtime
startTime	functionalities.h	/^    unsigned long long int startTime;$/;"	m	struct:_DAGtime
start_node	automation.py	/^start_node = sys.argv[2]$/;"	v
start_node_id	generate_profile_dispatch_history.py	/^    start_node_id = 1;# we can get it in the file name$/;"	v
std	scripts/observe_variations.py	/^			std = np.std(profile_map[id_values][key])$/;"	v
stop_scheduler	core.h	/^int stop_scheduler=0;$/;"	v
stop_scheduler	functionalities.h	/^int stop_scheduler=0;$/;"	v
store	benchmark_synthesis/cnn_new/cnn.py	/^    def store(self):$/;"	m	class:CNN
store	benchmark_synthesis/cnn_new/fusion_template.py	/^    def store(self):$/;"	m	class:Gemm
store	benchmark_synthesis/cnn_new/fusion_template.py	/^    def store(self):$/;"	m	class:Kernel
store	benchmark_synthesis/dnn_new/dnn.py	/^    def store(self):$/;"	m	class:DNN
store	benchmark_synthesis/dnn_new/fusion_template.py	/^    def store(self):$/;"	m	class:Gemm
store	benchmark_synthesis/dnn_new/fusion_template.py	/^    def store(self):$/;"	m	class:Kernel
successors	core.h	/^    std::vector <std::vector <int>> successors;$/;"	m	struct:_jobinfo
successors	functionalities.h	/^    std::vector <std::vector <int>> successors;$/;"	m	struct:_jobinfo
synchronization	benchmark_synthesis/cnn_new/cnn.py	/^    def synchronization(self):$/;"	m	class:CNN
synchronization	benchmark_synthesis/dnn_new/dnn.py	/^    def synchronization(self):$/;"	m	class:DNN
task	core.h	/^    TaskInfo *task;$/;"	m	struct:_kernellaunchinfo
task	functionalities.h	/^    TaskInfo *task;$/;"	m	struct:_kernellaunchinfo
taskID	core.h	/^    std::string taskID;$/;"	m	struct:_taskinfo
taskID	functionalities.h	/^    std::string taskID;$/;"	m	struct:_taskinfo
task_id	scripts/observe_variations.py	/^			task_id = int(values[1])$/;"	v
task_size	core.h	/^    unsigned int task_size;$/;"	m	struct:_taskinfo
task_size	functionalities.h	/^    unsigned int task_size;$/;"	m	struct:_taskinfo
thread_ids	benchmark_synthesis/cnn_new/fusion_template.py	/^    def thread_ids(self, kernel_dimension):$/;"	m	class:Kernel
thread_ids	benchmark_synthesis/dnn_new/fusion_template.py	/^    def thread_ids(self, kernel_dimension):$/;"	m	class:Kernel
tid	benchmark_synthesis/cnn_new/test.py	/^            tid = ""$/;"	v
tid	benchmark_synthesis/dnn_new/test.py	/^            tid = ""$/;"	v
time_buffer	core.h	/^int time_buffer;$/;"	v
time_buffer	functionalities.h	/^int time_buffer;$/;"	v
tinfo_filename	automation.py	/^tinfo_filename= "node_" + start_node+ ":" + fused_node_id$/;"	v
tinfoname	benchmark_synthesis/cnn_new/test.py	/^            tinfoname = ".\/CNN\/tinfo\/node_" + str(start_node) + ":" + tid$/;"	v
tinfoname	benchmark_synthesis/dnn_new/test.py	/^            tinfoname = ".\/DNN\/tinfo\/node_" + str(start_node) + ":" + uid$/;"	v
total_nodes	benchmark_synthesis/cnn_new/test.py	/^    total_nodes=len(configuration)$/;"	v
total_nodes	benchmark_synthesis/dnn_new/test.py	/^    total_nodes=len(v)$/;"	v
trace	automation.py	/^trace=(job_id+","+start_node+","+fused_node_id+","+isDependent+","+ platform_id+","+device_id+","+l_deadline+","+arrivaltime+"," +deadline+","+isTerminal+","+global_dagid+","+instanceid+","+frequency)$/;"	v
trace	run_profiling.py	/^        trace = trace_file[0].split(",")$/;"	v
traceID	core.h	/^    int traceID;        $/;"	m	struct:_taskinfo
traceID	functionalities.h	/^    int traceID;        $/;"	m	struct:_taskinfo
trace_file	run_profiling.py	/^        trace_file= open(".\/trace\/profile_"+benchmark+"_history_"+str(key)+".stats").readlines()$/;"	v
trace_file_contents	automation.py	/^trace_file_contents = open("trace\/dispatch_history_0.stats",'w')$/;"	v
trace_id	generate_profile_dispatch_history.py	/^    trace_id = 0$/;"	v
trace_id_file_map	generate_profile_dispatch_history.py	/^    trace_id_file_map = {}$/;"	v
trace_tinfo_map	run_profiling.py	/^        trace_tinfo_map = trace_tinfo_map_cnn$/;"	v
trace_tinfo_map	run_profiling.py	/^        trace_tinfo_map = trace_tinfo_map_dnn    $/;"	v
trace_tinfo_map	run_profiling.py	/^    trace_tinfo_map = None$/;"	v
trace_tinfo_map_cnn	run_profiling.py	/^    trace_tinfo_map_cnn = {0: 'node_2:2_3', 1: 'node_2:2_3', 2: 'node_0:0', 3: 'node_0:0', 4: 'node_1:1', 5: 'node_1:1', 6: 'node_0:0_1_2', 7: 'node_0:0_1_2', 8: 'node_0:0_1_2_3', 9: 'node_0:0_1_2_3', 10: 'node_0:0_1', 11: 'node_0:0_1', 12: 'node_0:0_1_2_3_4', 13: 'node_0:0_1_2_3_4', 14: 'node_2:2', 15: 'node_2:2', 16: 'node_1:1_2_3', 17: 'node_1:1_2_3', 18: 'node_1:1_2_3_4', 19: 'node_1:1_2_3_4', 20: 'node_2:2_3_4_5', 21: 'node_2:2_3_4_5', 22: 'node_3:3_4_5', 23: 'node_3:3_4_5', 24: 'node_1:1_2_3_4_5', 25: 'node_1:1_2_3_4_5', 26: 'node_3:3', 27: 'node_3:3', 28: 'node_5:5', 29: 'node_5:5', 30: 'node_4:4', 31: 'node_4:4', 32: 'node_1:1_2', 33: 'node_1:1_2', 34: 'node_3:3_4', 35: 'node_3:3_4', 36: 'node_2:2_3_4', 37: 'node_2:2_3_4', 38: 'node_4:4_5', 39: 'node_4:4_5', 40: 'node_0:0_1_2_3_4_5', 41: 'node_0:0_1_2_3_4_5'}$/;"	v
trace_tinfo_map_dnn	run_profiling.py	/^    trace_tinfo_map_dnn = {0: 'node_2:2_3', 1: 'node_2:2_3', 2: 'node_0:0', 3: 'node_0:0', 4: 'node_1:1', 5: 'node_1:1', 6: 'node_0:0_1_2', 7: 'node_0:0_1_2', 8: 'node_0:0_1_2_3', 9: 'node_0:0_1_2_3', 10: 'node_0:0_1', 11: 'node_0:0_1', 12: 'node_0:0_1_2_3_4', 13: 'node_0:0_1_2_3_4', 14: 'node_2:2', 15: 'node_2:2', 16: 'node_1:1_2_3', 17: 'node_1:1_2_3', 18: 'node_1:1_2_3_4', 19: 'node_1:1_2_3_4', 20: 'node_3:3', 21: 'node_3:3', 22: 'node_4:4', 23: 'node_4:4', 24: 'node_1:1_2', 25: 'node_1:1_2', 26: 'node_3:3_4', 27: 'node_3:3_4', 28: 'node_2:2_3_4', 29: 'node_2:2_3_4'}$/;"	v
turnaroundTime	core.h	/^    float turnaroundTime;$/;"	m	struct:_DAGtime
turnaroundTime	core.h	/^    unsigned long long int  turnaroundTime; \/\/ diff bw rel_end_time and rel_start_time$/;"	m	struct:_kernelexecutioninfo
turnaroundTime	functionalities.h	/^    float turnaroundTime;$/;"	m	struct:_DAGtime
turnaroundTime	functionalities.h	/^    unsigned long long int  turnaroundTime; \/\/ diff bw rel_end_time and rel_start_time$/;"	m	struct:_kernelexecutioninfo
type	core.h	/^    std::string type;$/;"	m	struct:_event
uid	benchmark_synthesis/cnn_new/test.py	/^            uid = ""$/;"	v
uid	benchmark_synthesis/dnn_new/test.py	/^            uid = ""$/;"	v
update_dependencies	benchmark_synthesis/cnn_new/fusion_template.py	/^    def update_dependencies(self, task_component):$/;"	m	class:DNN
update_dependencies	benchmark_synthesis/dnn_new/fusion_template.py	/^    def update_dependencies(self, task_component):$/;"	m	class:DNN
v	benchmark_synthesis/dnn_new/test.py	/^    v = [$/;"	v
values	scripts/observe_variations.py	/^			values = line.strip("\\n").split("\\t\\t")$/;"	v
varArguments	core.h	/^    std::vector < std::tuple <std::string, unsigned int, unsigned int> > varArguments;$/;"	m	struct:_kernelinfo
varArguments	functionalities.h	/^    std::vector < std::tuple <std::string, unsigned int, unsigned int> > varArguments;$/;"	m	struct:_kernelinfo
var_index	benchmark_synthesis/cnn_new/test.py	/^            var_index = 0$/;"	v
var_index	benchmark_synthesis/dnn_new/test.py	/^            var_index = 0$/;"	v
variables	benchmark_synthesis/dnn_new/test.py	/^            variables=[]$/;"	v
varsize	benchmark_synthesis/cnn_new/test.py	/^            varsize = 2 * depth$/;"	v
varsize	benchmark_synthesis/dnn_new/test.py	/^            varsize = 2 * depth$/;"	v
workDimension	core.h	/^    int workDimension;$/;"	m	struct:_kernelinfo
workDimension	functionalities.h	/^    int workDimension;$/;"	m	struct:_kernelinfo
write	core.h	/^    std::vector<cl_event> write;$/;"	m	struct:_kernel_events
write	functionalities.h	/^    std::vector<cl_event> write;$/;"	m	struct:_kernel_events
writeEnd	core.h	/^    unsigned long long int  writeEnd;$/;"	m	struct:_kernelexecutioninfo
writeEnd	functionalities.h	/^    unsigned long long int  writeEnd;$/;"	m	struct:_kernelexecutioninfo
writeQueued	core.h	/^    unsigned long long int  writeQueued;$/;"	m	struct:_kernelexecutioninfo
writeQueued	functionalities.h	/^    unsigned long long int  writeQueued;$/;"	m	struct:_kernelexecutioninfo
writeStart	core.h	/^    unsigned long long int  writeStart;$/;"	m	struct:_kernelexecutioninfo
writeStart	core.h	/^    unsigned long long int writeStart;$/;"	m	struct:_DAGtime
writeStart	functionalities.h	/^    unsigned long long int  writeStart;$/;"	m	struct:_kernelexecutioninfo
writeStart	functionalities.h	/^    unsigned long long int writeStart;$/;"	m	struct:_DAGtime
writeSubmit	core.h	/^    unsigned long long int  writeSubmit;$/;"	m	struct:_kernelexecutioninfo
writeSubmit	functionalities.h	/^    unsigned long long int  writeSubmit;$/;"	m	struct:_kernelexecutioninfo
writeTime	core.h	/^    unsigned long long int  writeTime;$/;"	m	struct:_kernelexecutioninfo
writeTime	functionalities.h	/^    unsigned long long int  writeTime;$/;"	m	struct:_kernelexecutioninfo
write_binaries	core.h	/^cl_int write_binaries(std::string filename,cl_program program, unsigned num_devices,$/;"	f
write_buffers_start	core.h	/^    unsigned long long int  write_buffers_start;$/;"	m	struct:_kernelexecutioninfo
write_buffers_start	functionalities.h	/^    unsigned long long int write_buffers_start;$/;"	m	struct:_kernelexecutioninfo
write_end	core.h	/^    unsigned long long int  write_end;$/;"	m	struct:_kernelexecutioninfo
write_end	functionalities.h	/^    unsigned long long int  write_end;$/;"	m	struct:_kernelexecutioninfo
write_file	core.h	/^int write_file(const char *name, const unsigned char *content, size_t size) $/;"	f
write_start	core.h	/^    unsigned long long int  write_start;$/;"	m	struct:_kernelexecutioninfo
write_start	functionalities.h	/^    unsigned long long int  write_start;$/;"	m	struct:_kernelexecutioninfo
write_start_h	core.h	/^    unsigned long long int  write_start_h;$/;"	m	struct:_kernelexecutioninfo
write_start_h	functionalities.h	/^    unsigned long long int  write_start_h;$/;"	m	struct:_kernelexecutioninfo
write_time	core.h	/^    unsigned long long int  write_time;$/;"	m	struct:_kernelexecutioninfo
write_time	functionalities.h	/^    unsigned long long int  write_time;$/;"	m	struct:_kernelexecutioninfo
